
#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
    vector<int> subsetSums(vector<int> arr, int n) {
        vector<int> output;
        backtrack(0,0,arr,n,output);
        return output;
    }
    void backtrack(int start,int sum,vector<int> arr, int n,vector<int> &output){
        if(start==n){
            output.push_back(sum);
            return;
        }
        backtrack(start+1,sum+arr[start],arr,n,output);
        
        backtrack(start+1,sum,arr,n,output);
        }
    
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;
        vector<int> arr(N);
        for (int i = 0; i < N; i++) {
            cin >> arr[i];
        }
        Solution ob;
        vector<int> ans = ob.subsetSums(arr, N);
        sort(ans.begin(), ans.end());
        for (auto sum : ans) {
            cout << sum << " ";
        }
        cout << endl;
    }
    return 0;
}
