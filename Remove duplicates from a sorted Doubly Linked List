/**
 * Definition of doubly linked list:
 * class Node {
 * public:
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next, Node *prev) {
 *          this->data = data;
 *          this->prev = prev;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node * removeDuplicates(Node *head)
{
   if(head==NULL)
   return NULL;
   
   Node* curr= head;
   while(curr != NULL){
   if(curr->next != NULL && curr->data== curr->next->data){
       if(curr->next->next !=NULL){
       Node* nexttemp=curr->next->next;
       Node* todelete= curr->next;
       delete(todelete);
       curr->next= nexttemp;
       nexttemp->prev= curr;
       }
       else{
           Node* todelete=curr->next;
           delete(todelete);
           curr->next=NULL;
       }
   }
   else //not equal
        {
            curr = curr -> next;
        }  
   }
   return head;
}
