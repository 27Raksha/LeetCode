/*************************************************
    
    class Node {
        public :

        int data;
        Node *next;

        Node(int data) {
            this -> data = data;
            this -> next = NULL;
        }
    };

*************************************************/
Node* floydDetect(Node* head){
    if(head==NULL)
    return NULL;

    Node* slow=head;
    Node* fast= head;
    while(fast!=NULL && slow!= NULL){
        fast=fast->next;
        if(fast!= NULL){
            fast= fast->next;
        }
        slow= slow->next;
        if(fast==slow){
            return slow;
        }
    }
    return NULL;
}

Node* startingNode(Node* head){
    if(head==NULL)
    return NULL;

    Node* intersection= floydDetect(head);
     if(intersection == NULL)
        return NULL;
    Node* slow=head;
    while(slow!=intersection){
        slow=slow->next;
        intersection= intersection->next;
    }
    return slow;
}
Node *removeLoop(Node *head)
{
    if(head == NULL)
    return NULL;
    Node* start= startingNode(head);
    if(start == NULL)
        return head;
    Node* temp= start;
    while(temp->next != start){
        temp= temp->next;
    }
    temp->next = NULL;
    return head;
    // Write your code here.
}
