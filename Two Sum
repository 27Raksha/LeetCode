//thime complexity n^2
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int x = nums.size();
        for(int i= 0;i<x-1;i++){
            for(int j=i+1;j<x;j++){
                if(nums[i]+nums[j]==target){
                    return{i,j};
                }
            }

        }
        return{};
    }
};

//time complexity n

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> numMap;
        int x = nums.size();
        for(int i=0;i<x;i++){
            int y=target-nums[i];
            if(numMap.count(y)){
                return{numMap[y],i};
            }
            numMap[nums[i]]=i;
        }
        return{};
}
};
